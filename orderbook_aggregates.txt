-- Your name and cohort here
-- Aryna Semianiuk
-- C402

/*
Aggregate Queries

REQUIREMENT - Use a multi-line comment to paste the first 5 or fewer results under your query
		     THEN records returned. 
*/

USE orderbook_activity_db;

-- #1: How many users do we have?
select count(*) from user;

/*
7

1 row(s) returned
*/


-- #2: List the username, userid, and number of orders each user has placed.
select u.uname, u.userid, count(o.orderid)
from `order` o
inner join user u
on o.userid = u.userid
group by u.uname, u.userid;

/* 
admin 1 3
james 3 3
kendra 4 5
...

5 row(s) returned
*/


-- #3: List the username, symbol, and number of orders placed for each user and for each symbol. 
-- Sort results in alphabetical order by symbol.
select u.uname, o.symbol, count(o.orderid)
from `order` o
inner join user u
on o.userid = u.userid
group by u.uname, o.symbol
order by o.symbol asc;

/*
alice A 5
james A 1
robert AAA 1
...

19 row(s) returned
*/


-- #4: Perform the same query as the one above, but only include admin users.
select u.uname, o.symbol, count(o.orderid)
from `order` o 
inner join user u
on o.userid = u.userid
inner join userroles ur on u.userid = ur.userid
inner join role r on ur.roleid = r.roleid
where r.name = 'admin'
group by u.uname, o.symbol
order by o.symbol asc;

/*
alice A 5
admin AAPL 1
alice GOOG 1
...

7 row(s) returned
*/


-- #5: List the username and the average absolute net order amount for each user with an order.
-- Round the result to the nearest hundredth and use an alias (averageTradePrice).
-- Sort the results by averageTradePrice with the largest value at the top.
select u.uname, round(avg(abs(o.shares * o.price)), 2) as averagetradeprice
from `order` o
inner join user u
on o.userid = u.userid
group by u.uname
order by averagetradeprice desc;

/*
kendra 17109.53
admin 1282.47
robert 10417.84
...

5 row(s) returned
*/


-- #6: How many shares for each symbol does each user have?
-- Display the username and symbol with number of shares.
select u.uname, o.symbol, sum(o.shares)
from `order` o
inner join user u
on o.userid = u.userid
group by u.uname, o.symbol;

/*
admin WLYY 100
admin GS 100
admin AAPL -15
...

19 rows returned
*/


-- #7: What symbols have at least 3 orders?
select symbol, count(orderid) as order_num
from `order`
group by symbol
having order_num >= 3;

/*
A 6
AAPL 3
WLY 3

3 row(s) returned
*/


-- #8: List all the symbols and absolute net fills that have fills exceeding $100.
-- Do not include the WLY symbol in the results.
-- Sort the results by highest net with the largest value at the top.
select o.symbol, sum(abs(f.share * f.price)) as net_fill
from fill f
inner join `order` o
on o.orderid = f.orderid
where o.symbol != 'wly'
group by o.symbol
having net_fill > 100
order by net_fill desc;

/*
SPY 54859.50
AAPL 7038.00
GS 6112.60
...

5 row(s) returned
*/


-- #9: List the top five users with the greatest amount of outstanding orders.
-- Display the absolute amount filled, absolute amount ordered, and net outstanding.
-- Sort the results by the net outstanding amount with the largest value at the top.
select u.uname, abs(sum(o.shares)) as total_ordered, abs(sum(ifnull(f.share, 0))) as total_filled, 
       abs(sum(o.shares) - sum(ifnull(f.share, 0))) as net_outstanding
from `order` o
inner join user u on o.userid = u.userid
left join fill f on o.orderid = f.orderid
group by u.uname
order by net_outstanding desc
limit 5;

/*
kendra 295 95 390
alice 208 75 283
admin 185 5 190
...

5 row(s) returned
*/